@page "/ViewPosts"
@attribute [Authorize]
@inject IPostService postService;
@using Domain.Models
@using HttpClients
@inject NavigationManager navMgr
<h3>Posts</h3>



<div class="wrapper">
    <button @onclick="LoadPosts" class="loadButton"> Load</button>
</div>

@if (posts == null)
{
    
}
else if (!posts.Any())
{
    <p> No posts to display :(</p>
}

else
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Author</th>
            <th>Title</th>
            <th>Body</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in posts)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Author.UserName</td>
                <td>@item.Title</td>
                <td>@item.Body</td>

                <td>
                    <img src="images/lupa.png" class="seePostBtn"
                         @onclick="@(() => navMgr.NavigateTo($"/SeePost/{item.Id}"))"/>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}



@code {

    private IEnumerable<Post>? posts;
    private string msg = "";
    private bool doShowFilters = false;


    private string? userNameFilter;
    private string? titleContainsFilter;
    
    
    

    private async Task LoadPosts()
    {
        try
        {
            
            posts = await postService.GetAsync(userNameFilter, titleContainsFilter);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg=e.Message;
        }
    }
    
    
    
}